{"version":3,"sources":["../../../../server/graphql/queries/usermeta/single.js"],"names":["type","args","uid","name","resolve","root","params","usermeta","findOne","exec","Error"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;;;kBAEe;AACdA,6BADc;AAEdC,OAAM;AACLC,OAAK;AACJC,SAAM,KADF;AAEJH,SAAM;AAFF;AADA,EAFQ;AAQdI,QARc,mBAQNC,IARM,EAQAC,MARA,EAQQ;AACrB,MAAMC,WAAW,mBAAcC,OAAd,CAAsB,EAAEN,KAAKI,OAAOJ,GAAd,EAAtB,EAA2CO,IAA3C,EAAjB;AACA,MAAI,CAACF,QAAL,EAAe;AACd,SAAM,IAAIG,KAAJ,CAAU,wBAAV,CAAN;AACA;AACD,SAAOH,QAAP;AACA;AAda,C","file":"single.js","sourcesContent":["import { GraphQLID, GraphQLNonNull } from 'graphql'\r\nimport { usermetaType } from '../../types/usermeta'\r\nimport usermetaModel from '../../../models/usermeta'\r\n\r\nexport default {\r\n\ttype: usermetaType,\r\n\targs: {\r\n\t\tuid: {\r\n\t\t\tname: 'UID',\r\n\t\t\ttype: new GraphQLNonNull(GraphQLID)\r\n\t\t}\r\n\t},\r\n\tresolve(root, params) {\r\n\t\tconst usermeta = usermetaModel.findOne({ uid: params.uid }).exec()\r\n\t\tif (!usermeta) {\r\n\t\t\tthrow new Error('Error getting usermeta')\r\n\t\t}\r\n\t\treturn usermeta\r\n\t}\r\n}\r\n"]}