{"version":3,"sources":["../server/index.js"],"names":["app","connect","mdb","db","connection","on","console","log","once","use","initialize","json","post","req","res","next","authenticate","err","user","message","success","schema","pretty","graphiql","process","env","NODE_ENV","indexPath","join","__dirname","compiler","middleware","noInfo","publicPath","output","get","sendFile","static","listen"],"mappings":"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","file":"index.js","sourcesContent":["import express from 'express'\r\nimport path from 'path'\r\nimport webpack from 'webpack'\r\nimport webpackDevMiddleware from 'webpack-dev-middleware'\r\nimport webpackHotMiddleware from 'webpack-hot-middleware'\r\nimport mongoose from 'mongoose'\r\nimport graphqlHTTP from 'express-graphql'\r\nimport bodyParser from 'body-parser'\r\nimport passport from 'passport'\r\nimport expressValidator from 'express-validator'\r\nimport wpconfig from '../webpack.dev.config'\r\nimport schema from './graphql'\r\nimport config from './utils/config'\r\nimport './utils/auth'\r\n\r\nconst app = express()\r\n\r\n// Mongoose Database Connection\r\nmongoose.connect(config.mdb)\r\nconst db = mongoose.connection\r\ndb.on('error', () => console.log('Failed to connect to DB.'))\r\n\t.once('open', () => console.log('Connected to DB. '))\r\n\r\n// some middlewares\r\napp.use(passport.initialize())\r\napp.use(bodyParser.json())\r\napp.use(expressValidator())\r\n\r\n// Login using passport\r\napp.post('/login', (req, res, next) => {\r\n\tpassport.authenticate('local', (err, user, message) => {\r\n\t\tif (user) return res.json(user)\r\n\t\treturn res.json({ success: false, err, ...message })\r\n\t})(req, res, next)\r\n})\r\n\r\n// Signup Using passport\r\napp.post('/signup', (req, res, next) => {\r\n\tpassport.authenticate('local.signup', (err, user, message) => {\r\n\t\tif (user) return res.json(user)\r\n\t\treturn res.json({ success: false, err, ...message })\r\n\t})(req, res, next)\r\n})\r\n\r\n// GraphQL Server\r\napp.use('/graphql', graphqlHTTP(() =>\r\n\t({\r\n\t\tschema,\r\n\t\tpretty: true,\r\n\t\tgraphiql: true\r\n\t})\r\n))\r\n\r\n// Setup for webpack and client render\r\nif (process.env.NODE_ENV !== 'production') {\r\n\tconst indexPath = path.join(__dirname, '../src/index.html')\r\n\tconst compiler = webpack(wpconfig)\r\n\tconst middleware = webpackDevMiddleware(compiler, {\r\n\t\tnoInfo: true,\r\n\t\tpublicPath: wpconfig.output.publicPath\r\n\t})\r\n\tapp.use(middleware)\r\n\tapp.use(webpackHotMiddleware(compiler))\r\n\tapp.get('*', (req, res) => {\r\n\t\tres.sendFile(indexPath)\r\n\t})\r\n} else {\r\n\tconst indexPath = path.join(__dirname, '../build/index.html')\r\n\tconst publicPath = express.static(path.join(__dirname, '../build'))\r\n\tapp.use(publicPath)\r\n\tapp.get('*', (req, res) => {\r\n\t\tres.sendFile(indexPath)\r\n\t})\r\n}\r\n\r\n// Starting server\r\napp.listen(9696, () => {\r\n\tconsole.log('GQL server running at port 9696!')\r\n})\r\n"]}